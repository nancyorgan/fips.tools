grab_shapefiles = function(state_abbrv){
state_number = ifelse(state_abbrv == "MN", 27,
ifelse(state_abbrv == "WI", 55, NULL))
temp.dir = tempdir()
temp.file = tempfile()
download.file(url = paste0("https://www2.census.gov/geo/tiger/TIGER2010/BG/2000/tl_2010_",
state_number,"_bg00.zip"), destfile = temp.file)
data = unzip(zipfile = temp.file, exdir = temp.dir)
state_data = readOGR(grep(".shp$", data, value = TRUE))
return(state_data)
}
MN = grab_shapefiles("MN")
?readOGR
??readOGR
library(rgeos)
library(sp)
library(rgdal)
MN = grab_shapefiles("MN")
head(MN)
library("devtools")
library("roxygen2")
getwd()
document()
document()
document()
document()
document()
?FIPS_converter
?FIPS_converter
document()
?FIPS_converter
document()
?grab_shapefiles
document()
?grab_shapfiles
document()
document()
document()
?FIPS_converter
?FIPS_converter
document()
document()
>fips.tools
?fips.tools
??fips.tools
??fips.tools
document()
document()
document()
document()
?FIPS_converter
with_original = read.table("nancygeocoded/geocoded_sitewise_with_SES.txt", sep = ",", header = TRUE)
library(rgeos)
library(sp)
library(rgdal)
setwd("/Users/organn/Documents/race_imputation/sitewise pilot/")
with_original = read.table("nancygeocoded/geocoded_sitewise_with_SES.txt", sep = ",", header = TRUE)
with_original = with_original[with_original$state == "MN",]
dat = subset(with_original, select = c("id", "lat", "long"))
head(dat)
head(wtih_original)
head(with_original)
url = "https://www.census.gov/geo/reference/ansi_statetables.html"
webpage <- readLines(url)
readHTMLTable(webpage, header = T, stringsAsFactors = F)
?readHTMLTable
??readHTMLTable
library("XML")
url = "https://www.census.gov/geo/reference/ansi_statetables.html"
webpage <- readLines(url)
readHTMLTable(webpage, header = T, stringsAsFactors = F)
fipsdf <- readHTMLTable(webpage, header = T, stringsAsFactors = F)[[1]]
fipsdf
fipsdf$`FIPS State Numeric Code`[fipsdf$`Official USPS Code` == "MN"]
fipsdf
names(fipsdf) = c("name", "code", "abbrv")
fipsdf = subset(fipsdf, select = c("abbrv", "code"))
fipsdf
write.csv(fipsdf, "/Users/organn/Documents/race_imputation/fips.tools/data/", row.names = FALSE)
write.csv(fipsdf, "/Users/organn/Documents/race_imputation/fips.tools/data/", row.names = FALSE)
fipsdf
write.csv(fipsdf, "/Users/organn/Documents/race_imputation/fips.tools/data", row.names = FALSE)
write.csv(fipsdf, "/Users/organn/Documents/race_imputation/fips.tools/data/fips_codes.csv", row.names = FALSE)
pwd
getwd
getwd()
setwd("/Users/organn/Documents/race_imputation/fips.tools/")
document()
rm(MN)
rm(url)
rm(webpage)
fipsdf
?unlink
grab_shapefiles = function(state_abbrv){
state_data = list()
for(i in 1:length(unique(state_abbrev))){
state_number[i] = fipsdf$code[fipsdf$abbrv == state_abbrv[i]]
temp.dir = tempdir()
temp.file = tempfile()
download.file(url = paste0("https://www2.census.gov/geo/tiger/TIGER2010/BG/2000/tl_2010_",
state_number[i],"_bg00.zip"), destfile = temp.file)
data = unzip(zipfile = temp.file, exdir = temp.dir)
state_data[[i]] = readOGR(grep(".shp$", data, value = TRUE))
unlink(temp.dir)
unlink(temp.file)
}
return(state_data)
}
this = grab_shapefiles("MN", "WI")
this = grab_shapefiles(c("MN", "WI"))
grab_shapefiles = function(state_abbrv){
state_data = list()
for(i in 1:length(unique(state_abbrv))){
state_number[i] = fipsdf$code[fipsdf$abbrv == state_abbrv[i]]
temp.dir = tempdir()
temp.file = tempfile()
download.file(url = paste0("https://www2.census.gov/geo/tiger/TIGER2010/BG/2000/tl_2010_",
state_number[i],"_bg00.zip"), destfile = temp.file)
data = unzip(zipfile = temp.file, exdir = temp.dir)
state_data[[i]] = readOGR(grep(".shp$", data, value = TRUE))
unlink(temp.dir)
unlink(temp.file)
}
return(state_data)
}
this = grab_shapefiles(c("MN", "WI"))
fipsdf
grab_shapefiles = function(state_abbrv){
state_data = list()
for(i in 1:length(unique(state_abbrv))){
state_number[i] = fipsdf$code[fipsdf$abbrv == state_abbrv[i]]
temp.dir = tempdir()
temp.file = tempfile()
download.file(url = paste0("https://www2.census.gov/geo/tiger/TIGER2010/BG/2000/tl_2010_",
state_number[i],"_bg00.zip"), destfile = temp.file)
data = unzip(zipfile = temp.file, exdir = temp.dir)
state_data[[i]] = readOGR(grep(".shp$", data, value = TRUE))
unlink(temp.dir)
unlink(temp.file)
}
return(state_data)
}
this = grab_shapefiles(c("MN", "WI"))
grab_shapefiles = function(state_abbrv){
state_data = list()
state_number = NULL
for(i in 1:length(unique(state_abbrv))){
state_number[i] = fipsdf$code[fipsdf$abbrv == state_abbrv[i]]
temp.dir = tempdir()
temp.file = tempfile()
download.file(url = paste0("https://www2.census.gov/geo/tiger/TIGER2010/BG/2000/tl_2010_",
state_number[i],"_bg00.zip"), destfile = temp.file)
data = unzip(zipfile = temp.file, exdir = temp.dir)
state_data[[i]] = readOGR(grep(".shp$", data, value = TRUE))
unlink(temp.dir)
unlink(temp.file)
}
return(state_data)
}
this = grab_shapefiles(c("MN", "WI"))
this
names(this)
names(this)
length(this)
class(this)
class(this[[1]])
rbindlist(this)
??rbindlist
library("dplyr")
rbindlist(this)
library("data.table")
rbindlist(this)
data.table::rbindlist(this)
dplyr::rbindlist(this)
dplyr::rbind_list(this)
dplyr::bind_rows(this)
this
rbind(this[[1]], this[[2]] ,makeUniqueIDs = TRUE)
plot(this[[1]])
this2 = do.call(rbind,c(this,list(makeUniqueIDs=TRUE)))
plot(this2)
plot(this[[2]])
getwd()
library("devtools")
library("roxygen2")
document()
getwd()
setwd("/Users/organn/Documents/race_imputation/")
ls
getwd()
install("fips.tools")
fipsdf
grab_shapefiles = function(state_abbrv){
state_data = list()
state_number = NULL
for(i in 1:length(unique(state_abbrv))){
state_number[i] = fipsdf$code[fipsdf$abbrv == state_abbrv[i]]
temp.dir = tempdir()
temp.file = tempfile()
download.file(url = paste0("https://www2.census.gov/geo/tiger/TIGER2010/BG/2000/tl_2010_",
state_number[i],"_bg00.zip"), destfile = temp.file)
data = unzip(zipfile = temp.file, exdir = temp.dir)
state_data[[i]] = readOGR(grep(".shp$", data, value = TRUE))
unlink(temp.dir)
unlink(temp.file)
}
final = do.call(rbind,c(state_data,list(makeUniqueIDs=TRUE)))
return(final)
}
this = grab_shapefiles(c("MN", "WI"))
plot(this[[1]])
this
plot(this)
FIPS_converter = function(id, lat, long, state_data){
dat = data.frame(id, lat, long)
rownames(dat) = dat$id
coordinates(dat) <- ~ long + lat
proj4string(dat) <- proj4string(state_data)
final = over(dat, state_data)
final$id = row.names(final)
return(final)
}
FIPS_converter("Some house", 44.079216,-92.66854, grab_shapefiles(c("MN", "WI")))
Mayo = grab_shapefiles(c("MN", "WI"))
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)
t(FIPS_converter("Some house", 44.079216,-92.66854, Mayo))
View(fipsdf)
FIPS_converter = function(id, lat, long, state_data){
dat = data.frame(id, lat, long)
rownames(dat) = dat$id
coordinates(dat) <- ~ long + lat
proj4string(dat) <- proj4string(state_data)
final = over(dat, state_data)
final$id = row.names(final)
final = subset(final, select = c("id", "BKGPIDFP00", "INTPTLAT00", "INTPTLON00"))
names(final) = c("id", "FIPS", "lat", "long")
return(final)
}
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)
FIPS_converter = function(id, lat, long, state_data){
dat = data.frame(id, lat, long)
rownames(dat) = dat$id
coordinates(dat) <- ~ long + lat
proj4string(dat) <- proj4string(state_data)
final = over(dat, state_data)
#final$id = row.names(final)
final = subset(final, select = c("id", "BKGPIDFP00", "INTPTLAT00", "INTPTLON00"))
names(final) = c("id", "FIPS", "lat", "long")
return(final)
}
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)
dat = data.frame(id, lat, long)
FIPS_converter = function(id, lat, long, state_data){
dat = data.frame(id, lat, long)
rownames(dat) = dat$id
coordinates(dat) <- ~ long + lat
proj4string(dat) <- proj4string(state_data)
final = over(dat, state_data)
final$id = row.names(final)
row.names(final) = c(1:length(id))
final = subset(final, select = c("id", "BKGPIDFP00", "INTPTLAT00", "INTPTLON00"))
names(final) = c("id", "FIPS", "lat", "long")
return(final)
}
Mayo = grab_shapefiles(c("MN", "WI"))
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)
FIPS_converter = function(id, lat, long, state_data){
dat = data.frame(id, lat, long)
rownames(dat) = dat$id
coordinates(dat) <- ~ long + lat
proj4string(dat) <- proj4string(state_data)
final = over(dat, state_data)
final$id = row.names(final)
row.names(final) = c(1:length(id))
final = subset(final, select = c("id", "BKGPIDFP00", "INTPTLAT00", "INTPTLON00"))
names(final) = c("id", "FIPS", "lat", "long")
final$lat = gsub("+", "", final$lat)
final$long = gsub("+", "", final$long)
return(final)
}
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)
?gsub
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)$lat
as.numeric(FIPS_converter("Some house", 44.079216,-92.66854, Mayo)$lat)
FIPS_converter = function(id, lat, long, state_data){
dat = data.frame(id, lat, long)
rownames(dat) = dat$id
coordinates(dat) <- ~ long + lat
proj4string(dat) <- proj4string(state_data)
final = over(dat, state_data)
final$id = row.names(final)
row.names(final) = c(1:length(id))
final = subset(final, select = c("id", "BKGPIDFP00", "INTPTLAT00", "INTPTLON00"))
names(final) = c("id", "FIPS", "lat", "long")
final$lat = as.numeric(final$lat)
final$long = as.numeric(final$long)
return(final)
}
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)
FIPS_converter = function(id, lat, long, state_data){
dat = data.frame(id, lat, long)
rownames(dat) = dat$id
coordinates(dat) <- ~ long + lat
proj4string(dat) <- proj4string(state_data)
final = over(dat, state_data)
final$id = row.names(final)
row.names(final) = c(1:length(id))
final = subset(final, select = c("id", "BKGPIDFP00", "INTPTLAT00", "INTPTLON00"))
names(final) = c("id", "FIPS", "lat", "long")
#final$lat = as.numeric(final$lat)
#final$long = as.numeric(final$long)
return(final)
}
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)$lat
as.character(FIPS_converter("Some house", 44.079216,-92.66854, Mayo)$lat)
as.numeric(as.character(FIPS_converter("Some house", 44.079216,-92.66854, Mayo)$lat))
?as.numeric
as.numeric(as.character(FIPS_converter("Some house", 44.079216,-92.66854, Mayo)$lat), length = 6)
as.numeric(as.character(FIPS_converter("Some house", 44.079216,-92.66854, Mayo)$lat), length = 9)
FIPS_converter = function(id, lat, long, state_data){
dat = data.frame(id, lat, long)
rownames(dat) = dat$id
coordinates(dat) <- ~ long + lat
proj4string(dat) <- proj4string(state_data)
final = over(dat, state_data)
final$id = row.names(final)
row.names(final) = c(1:length(id))
final = subset(final, select = c("id", "BKGPIDFP00", "INTPTLAT00", "INTPTLON00"))
names(final) = c("id", "FIPS", "lat", "long")
final$lat = as.character(final$lat)
final$long = as.character(final$long)
return(final)
}
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)
FIPS_converter = function(id, lat, long, state_data){
dat = data.frame(id, lat, long)
rownames(dat) = dat$id
coordinates(dat) <- ~ long + lat
proj4string(dat) <- proj4string(state_data)
final = over(dat, state_data)
final$id = row.names(final)
row.names(final) = c(1:length(id))
final = subset(final, select = c("id", "BKGPIDFP00", "INTPTLAT00", "INTPTLON00"))
names(final) = c("id", "FIPS", "lat", "long")
final$lat = as.character(final$lat)
final$lat = gsub("+", "", final$lat)
final$long = as.character(final$long)
final$long = gsub("+", "", final$long)
return(final)
}
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)
FIPS_converter = function(id, lat, long, state_data){
dat = data.frame(id, lat, long)
rownames(dat) = dat$id
coordinates(dat) <- ~ long + lat
proj4string(dat) <- proj4string(state_data)
final = over(dat, state_data)
final$id = row.names(final)
row.names(final) = c(1:length(id))
final = subset(final, select = c("id", "BKGPIDFP00", "INTPTLAT00", "INTPTLON00"))
names(final) = c("id", "FIPS", "lat", "long")
final$lat = as.character(final$lat)
final$lat = gsub("+", "", final$lat)
final$long = as.character(final$long)
final$long = gsub("+", "", final$long)
return(final)
}
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)$lat
as.character(FIPS_converter("Some house", 44.079216,-92.66854, Mayo)$lat)
this = as.character(FIPS_converter("Some house", 44.079216,-92.66854, Mayo)$lat)
this
gsub("+", "", final$long)
gsub("+", "", this)
gsub("\\+", "", this)
FIPS_converter = function(id, lat, long, state_data){
dat = data.frame(id, lat, long)
rownames(dat) = dat$id
coordinates(dat) <- ~ long + lat
proj4string(dat) <- proj4string(state_data)
final = over(dat, state_data)
final$id = row.names(final)
row.names(final) = c(1:length(id))
final = subset(final, select = c("id", "BKGPIDFP00", "INTPTLAT00", "INTPTLON00"))
names(final) = c("id", "FIPS", "lat", "long")
final$lat = as.character(final$lat)
final$lat = gsub("\\+", "", final$lat)
final$long = as.character(final$long)
final$long = gsub("\\+", "", final$long)
return(final)
}
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)
FIPS_converter = function(id, lat, long, state_data){
dat = data.frame(id, lat, long)
rownames(dat) = dat$id
coordinates(dat) <- ~ long + lat
proj4string(dat) <- proj4string(state_data)
final = over(dat, state_data)
final$id = row.names(final)
row.names(final) = c(1:length(id))
final = subset(final, select = c("id", "BKGPIDFP00", "INTPTLAT00", "INTPTLON00"))
names(final) = c("id", "FIPS", "lat", "long")
final$lat = as.character(final$lat)
final$lat = as.numeric(gsub("\\+", "", final$lat))
final$long = as.character(final$long)
final$long = as.numeric(gsub("\\+", "", final$long))
return(final)
}
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)
FIPS_converter = function(id, lat, long, state_data){
dat = data.frame(id, lat, long)
rownames(dat) = dat$id
coordinates(dat) <- ~ long + lat
proj4string(dat) <- proj4string(state_data)
final = over(dat, state_data)
final$id = row.names(final)
row.names(final) = c(1:length(id))
final = subset(final, select = c("id", "BKGPIDFP00", "INTPTLAT00", "INTPTLON00"))
names(final) = c("id", "FIPS", "lat", "long")
final$lat = as.character(final$lat)
final$lat = gsub("\\+", "", final$lat)
final$long = as.character(final$long)
final$long = gsub("\\+", "", final$long)
return(final)
}
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)
FIPS_converter = function(id, lat, long, state_data){
dat = data.frame(id, lat, long)
rownames(dat) = dat$id
coordinates(dat) <- ~ long + lat
proj4string(dat) <- proj4string(state_data)
final = over(dat, state_data)
final$id = row.names(final)
row.names(final) = c(1:length(id))
final = subset(final, select = c("id", "BKGPIDFP00"))
names(final) = c("id", "FIPS")
return(final)
}
FIPS_converter("Some house", 44.079216,-92.66854, Mayo)
getwd()
setwd("/Users/organn/Documents/race_imputation/fips.tools/")
getwd()
document()
setwd("/Users/organn/Documents/race_imputation")
install("fips.tools")
View(fipsdf)
fipsdf
install("fips.tools")
getwd()
?fips.df
?fips.tools
library("fips.tools")
?fips.tools
??fips.tools
